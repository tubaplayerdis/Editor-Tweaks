#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryContainer

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "BrickRigs_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryContainer.WBP_InventoryContainer_C.ExecuteUbergraph_WBP_InventoryContainer
// 0x0038 (0x0038 - 0x0000)
struct WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasInventory;                        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewMoney;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            K2Node_Select_Default_1;                           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NumberToText_ReturnValue;                 // 0x0018(0x0018)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer) == 0x000008, "Wrong alignment on WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer");
static_assert(sizeof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer) == 0x000038, "Wrong size on WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, EntryPoint) == 0x000000, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_bool_Variable) == 0x000004, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_byte_Variable) == 0x000005, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_byte_Variable_3) == 0x000009, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_bool_Variable_2) == 0x00000A, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_byte_Variable_4) == 0x00000B, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, Temp_byte_Variable_5) == 0x00000C, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, K2Node_Event_bHasInventory) == 0x00000D, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::K2Node_Event_bHasInventory' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, K2Node_Event_NewMoney) == 0x000010, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::K2Node_Event_NewMoney' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, K2Node_Select_Default) == 0x000015, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, K2Node_Select_Default_1) == 0x000016, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, CallFunc_NumberToText_ReturnValue) == 0x000018, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::CallFunc_NumberToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer, K2Node_Select_Default_2) == 0x000031, "Member 'WBP_InventoryContainer_C_ExecuteUbergraph_WBP_InventoryContainer::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_InventoryContainer.WBP_InventoryContainer_C.UpdateOwnerMoney
// 0x0004 (0x0004 - 0x0000)
struct WBP_InventoryContainer_C_UpdateOwnerMoney final
{
public:
	float                                         NewMoney;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryContainer_C_UpdateOwnerMoney) == 0x000004, "Wrong alignment on WBP_InventoryContainer_C_UpdateOwnerMoney");
static_assert(sizeof(WBP_InventoryContainer_C_UpdateOwnerMoney) == 0x000004, "Wrong size on WBP_InventoryContainer_C_UpdateOwnerMoney");
static_assert(offsetof(WBP_InventoryContainer_C_UpdateOwnerMoney, NewMoney) == 0x000000, "Member 'WBP_InventoryContainer_C_UpdateOwnerMoney::NewMoney' has a wrong offset!");

// Function WBP_InventoryContainer.WBP_InventoryContainer_C.UpdateHasInventory
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryContainer_C_UpdateHasInventory final
{
public:
	bool                                          bHasInventory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryContainer_C_UpdateHasInventory) == 0x000001, "Wrong alignment on WBP_InventoryContainer_C_UpdateHasInventory");
static_assert(sizeof(WBP_InventoryContainer_C_UpdateHasInventory) == 0x000001, "Wrong size on WBP_InventoryContainer_C_UpdateHasInventory");
static_assert(offsetof(WBP_InventoryContainer_C_UpdateHasInventory, bHasInventory) == 0x000000, "Member 'WBP_InventoryContainer_C_UpdateHasInventory::bHasInventory' has a wrong offset!");

}


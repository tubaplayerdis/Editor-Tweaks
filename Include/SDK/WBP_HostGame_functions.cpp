#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HostGame

#include "Basic.hpp"

#include "WBP_HostGame_classes.hpp"
#include "WBP_HostGame_parameters.hpp"


namespace SDK
{

// Function WBP_HostGame.WBP_HostGame_C.ExecuteUbergraph_WBP_HostGame
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HostGame_C::ExecuteUbergraph_WBP_HostGame(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HostGame_C", "ExecuteUbergraph_WBP_HostGame");

	Params::WBP_HostGame_C_ExecuteUbergraph_WBP_HostGame Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HostGame.WBP_HostGame_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_HostGame_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HostGame_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HostGame.WBP_HostGame_C.UpdatePlayButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanPlay                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsOnline                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_HostGame_C::UpdatePlayButton(bool bCanPlay, bool bIsOnline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HostGame_C", "UpdatePlayButton");

	Params::WBP_HostGame_C_UpdatePlayButton Parms{};

	Parms.bCanPlay = bCanPlay;
	Parms.bIsOnline = bIsOnline;

	UObject::ProcessEvent(Func, &Parms);
}

}


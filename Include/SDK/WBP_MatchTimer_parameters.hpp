#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MatchTimer

#include "Basic.hpp"

#include "BrickRigs_structs.hpp"


namespace SDK::Params
{

// Function WBP_MatchTimer.WBP_MatchTimer_C.ExecuteUbergraph_WBP_MatchTimer
// 0x0040 (0x0040 - 0x0000)
struct WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NewTime;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NumberToText_ReturnValue;                 // 0x0020(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer) == 0x000008, "Wrong alignment on WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer");
static_assert(sizeof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer) == 0x000040, "Wrong size on WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, EntryPoint) == 0x000000, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, Temp_bool_Variable) == 0x000004, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, Temp_byte_Variable) == 0x000005, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, K2Node_Event_NewTime) == 0x000008, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::K2Node_Event_NewTime' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, CallFunc_Max_ReturnValue) == 0x000010, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, CallFunc_NumberToText_ReturnValue) == 0x000020, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::CallFunc_NumberToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer, K2Node_Select_Default) == 0x000039, "Member 'WBP_MatchTimer_C_ExecuteUbergraph_WBP_MatchTimer::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MatchTimer.WBP_MatchTimer_C.UpdateTimer
// 0x0004 (0x0004 - 0x0000)
struct WBP_MatchTimer_C_UpdateTimer final
{
public:
	int32                                         NewTime;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MatchTimer_C_UpdateTimer) == 0x000004, "Wrong alignment on WBP_MatchTimer_C_UpdateTimer");
static_assert(sizeof(WBP_MatchTimer_C_UpdateTimer) == 0x000004, "Wrong size on WBP_MatchTimer_C_UpdateTimer");
static_assert(offsetof(WBP_MatchTimer_C_UpdateTimer, NewTime) == 0x000000, "Member 'WBP_MatchTimer_C_UpdateTimer::NewTime' has a wrong offset!");

}


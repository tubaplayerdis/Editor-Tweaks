#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BrickTextBox

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "BrickRigs_structs.hpp"


namespace SDK::Params
{

// Function WBP_BrickTextBox.WBP_BrickTextBox_C.ExecuteUbergraph_WBP_BrickTextBox
// 0x001C (0x001C - 0x0000)
struct WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            K2Node_ComponentBoundEvent_InColorStyle;           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIStyleState                            K2Node_ComponentBoundEvent_InContentStyleState;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewIsPassword;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNewVisible;                          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBrickUIIconSlot                       K2Node_MakeStruct_BrickUIIconSlot;                 // 0x0014(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox) == 0x000004, "Wrong alignment on WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox");
static_assert(sizeof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox) == 0x00001C, "Wrong size on WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, EntryPoint) == 0x000000, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, Temp_bool_Variable) == 0x000004, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, Temp_byte_Variable) == 0x000005, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, K2Node_ComponentBoundEvent_InColorStyle) == 0x000007, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::K2Node_ComponentBoundEvent_InColorStyle' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, K2Node_ComponentBoundEvent_InContentStyleState) == 0x000008, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::K2Node_ComponentBoundEvent_InContentStyleState' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, K2Node_Event_bNewIsPassword) == 0x000009, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::K2Node_Event_bNewIsPassword' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, K2Node_Event_bNewVisible) == 0x00000A, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::K2Node_Event_bNewVisible' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, K2Node_Select_Default) == 0x000010, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox, K2Node_MakeStruct_BrickUIIconSlot) == 0x000014, "Member 'WBP_BrickTextBox_C_ExecuteUbergraph_WBP_BrickTextBox::K2Node_MakeStruct_BrickUIIconSlot' has a wrong offset!");

// Function WBP_BrickTextBox.WBP_BrickTextBox_C.UpdatePasswordVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_BrickTextBox_C_UpdatePasswordVisible final
{
public:
	bool                                          bNewVisible;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BrickTextBox_C_UpdatePasswordVisible) == 0x000001, "Wrong alignment on WBP_BrickTextBox_C_UpdatePasswordVisible");
static_assert(sizeof(WBP_BrickTextBox_C_UpdatePasswordVisible) == 0x000001, "Wrong size on WBP_BrickTextBox_C_UpdatePasswordVisible");
static_assert(offsetof(WBP_BrickTextBox_C_UpdatePasswordVisible, bNewVisible) == 0x000000, "Member 'WBP_BrickTextBox_C_UpdatePasswordVisible::bNewVisible' has a wrong offset!");

// Function WBP_BrickTextBox.WBP_BrickTextBox_C.UpdateIsPassword
// 0x0001 (0x0001 - 0x0000)
struct WBP_BrickTextBox_C_UpdateIsPassword final
{
public:
	bool                                          bNewIsPassword;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BrickTextBox_C_UpdateIsPassword) == 0x000001, "Wrong alignment on WBP_BrickTextBox_C_UpdateIsPassword");
static_assert(sizeof(WBP_BrickTextBox_C_UpdateIsPassword) == 0x000001, "Wrong size on WBP_BrickTextBox_C_UpdateIsPassword");
static_assert(offsetof(WBP_BrickTextBox_C_UpdateIsPassword, bNewIsPassword) == 0x000000, "Member 'WBP_BrickTextBox_C_UpdateIsPassword::bNewIsPassword' has a wrong offset!");

// Function WBP_BrickTextBox.WBP_BrickTextBox_C.BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature final
{
public:
	EBrickUIColorStyle                            InColorStyle;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIStyleState                            InContentStyleState;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature) == 0x000001, "Wrong alignment on WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature");
static_assert(sizeof(WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature) == 0x000002, "Wrong size on WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature");
static_assert(offsetof(WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature, InColorStyle) == 0x000000, "Member 'WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature::InColorStyle' has a wrong offset!");
static_assert(offsetof(WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature, InContentStyleState) == 0x000001, "Member 'WBP_BrickTextBox_C_BndEvt__ShowPasswordButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature::InContentStyleState' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Character_RC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BrickRigs_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Character_RC.ABP_Character_RC_C
// 0x04B0 (0x0770 - 0x02C0)
class UABP_Character_RC_C : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x02F8(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0378(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0398(0x0020)()
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x03C0(0x01E0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x05A0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0640(0x0080)()
	struct FAnimNode_ViewRotation                 AnimGraphNode_ViewRotation;                        // 0x06C0(0x0090)()
	struct FRotator                               ViewRotation;                                      // 0x0750(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         LookRatio;                                         // 0x075C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandTargetLocation;                                // 0x0760(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseHandIK;                                        // 0x076C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bVehicleGone;                                      // 0x076D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Character_RC(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Character_RC_AnimGraphNode_TwoBoneIK_3FD96F534BED16ACDEB2A595F55213BC();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Character_RC_C">();
	}
	static class UABP_Character_RC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Character_RC_C>();
	}
};
static_assert(alignof(UABP_Character_RC_C) == 0x000010, "Wrong alignment on UABP_Character_RC_C");
static_assert(sizeof(UABP_Character_RC_C) == 0x000770, "Wrong size on UABP_Character_RC_C");
static_assert(offsetof(UABP_Character_RC_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_Character_RC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UABP_Character_RC_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, AnimGraphNode_SequencePlayer_1) == 0x0002F8, "Member 'UABP_Character_RC_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, AnimGraphNode_LocalToComponentSpace) == 0x000378, "Member 'UABP_Character_RC_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, AnimGraphNode_ComponentToLocalSpace) == 0x000398, "Member 'UABP_Character_RC_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, AnimGraphNode_TwoBoneIK) == 0x0003C0, "Member 'UABP_Character_RC_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, AnimGraphNode_BlendListByBool) == 0x0005A0, "Member 'UABP_Character_RC_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, AnimGraphNode_SequencePlayer) == 0x000640, "Member 'UABP_Character_RC_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, AnimGraphNode_ViewRotation) == 0x0006C0, "Member 'UABP_Character_RC_C::AnimGraphNode_ViewRotation' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, ViewRotation) == 0x000750, "Member 'UABP_Character_RC_C::ViewRotation' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, LookRatio) == 0x00075C, "Member 'UABP_Character_RC_C::LookRatio' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, HandTargetLocation) == 0x000760, "Member 'UABP_Character_RC_C::HandTargetLocation' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, bUseHandIK) == 0x00076C, "Member 'UABP_Character_RC_C::bUseHandIK' has a wrong offset!");
static_assert(offsetof(UABP_Character_RC_C, bVehicleGone) == 0x00076D, "Member 'UABP_Character_RC_C::bVehicleGone' has a wrong offset!");

}


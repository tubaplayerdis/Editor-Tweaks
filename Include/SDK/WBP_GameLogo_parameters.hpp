#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameLogo

#include "Basic.hpp"

#include "GameLogoEnum_structs.hpp"
#include "BrickRigs_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_GameLogo.WBP_GameLogo_C.ExecuteUbergraph_WBP_GameLogo
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class UBrickUIStyle* Style)> K2Node_CreateDelegate_OutputDelegate;          // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBrickUIStyle*                    K2Node_CustomEvent_Style;                          // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo) == 0x000008, "Wrong alignment on WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo");
static_assert(sizeof(WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo) == 0x000020, "Wrong size on WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo");
static_assert(offsetof(WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo, EntryPoint) == 0x000000, "Member 'WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo, K2Node_CustomEvent_Style) == 0x000018, "Member 'WBP_GameLogo_C_ExecuteUbergraph_WBP_GameLogo::K2Node_CustomEvent_Style' has a wrong offset!");

// Function WBP_GameLogo.WBP_GameLogo_C.UpdateUIStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameLogo_C_UpdateUIStyle final
{
public:
	const class UBrickUIStyle*                    Style;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameLogo_C_UpdateUIStyle) == 0x000008, "Wrong alignment on WBP_GameLogo_C_UpdateUIStyle");
static_assert(sizeof(WBP_GameLogo_C_UpdateUIStyle) == 0x000008, "Wrong size on WBP_GameLogo_C_UpdateUIStyle");
static_assert(offsetof(WBP_GameLogo_C_UpdateUIStyle, Style) == 0x000000, "Member 'WBP_GameLogo_C_UpdateUIStyle::Style' has a wrong offset!");

// Function WBP_GameLogo.WBP_GameLogo_C.UpdateLogo
// 0x0060 (0x0060 - 0x0000)
struct WBP_GameLogo_C_UpdateLogo final
{
public:
	EGameLogoEnum                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameLogoEnum                                 Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_InitMID_ReturnValue;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x0038(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue_1;                   // 0x0048(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameLogo_C_UpdateLogo) == 0x000008, "Wrong alignment on WBP_GameLogo_C_UpdateLogo");
static_assert(sizeof(WBP_GameLogo_C_UpdateLogo) == 0x000060, "Wrong size on WBP_GameLogo_C_UpdateLogo");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, Temp_byte_Variable) == 0x000000, "Member 'WBP_GameLogo_C_UpdateLogo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_GameLogo_C_UpdateLogo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, Temp_byte_Variable_2) == 0x000002, "Member 'WBP_GameLogo_C_UpdateLogo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, Temp_byte_Variable_3) == 0x000003, "Member 'WBP_GameLogo_C_UpdateLogo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, Temp_object_Variable) == 0x000008, "Member 'WBP_GameLogo_C_UpdateLogo::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, Temp_object_Variable_1) == 0x000010, "Member 'WBP_GameLogo_C_UpdateLogo::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, CallFunc_MakeColor_ReturnValue) == 0x000018, "Member 'WBP_GameLogo_C_UpdateLogo::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, K2Node_Select_Default) == 0x000028, "Member 'WBP_GameLogo_C_UpdateLogo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, CallFunc_InitMID_ReturnValue) == 0x000030, "Member 'WBP_GameLogo_C_UpdateLogo::CallFunc_InitMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, CallFunc_GetColor_ReturnValue) == 0x000038, "Member 'WBP_GameLogo_C_UpdateLogo::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, CallFunc_GetColor_ReturnValue_1) == 0x000048, "Member 'WBP_GameLogo_C_UpdateLogo::CallFunc_GetColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_UpdateLogo, K2Node_Select_Default_1) == 0x000058, "Member 'WBP_GameLogo_C_UpdateLogo::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_GameLogo.WBP_GameLogo_C.SetLogo
// 0x0002 (0x0002 - 0x0000)
struct WBP_GameLogo_C_SetLogo final
{
public:
	EGameLogoEnum                                 InLogo;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameLogo_C_SetLogo) == 0x000001, "Wrong alignment on WBP_GameLogo_C_SetLogo");
static_assert(sizeof(WBP_GameLogo_C_SetLogo) == 0x000002, "Wrong size on WBP_GameLogo_C_SetLogo");
static_assert(offsetof(WBP_GameLogo_C_SetLogo, InLogo) == 0x000000, "Member 'WBP_GameLogo_C_SetLogo::InLogo' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_SetLogo, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_GameLogo_C_SetLogo::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_GameLogo.WBP_GameLogo_C.InitMID
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameLogo_C_InitMID final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameLogo_C_InitMID) == 0x000008, "Wrong alignment on WBP_GameLogo_C_InitMID");
static_assert(sizeof(WBP_GameLogo_C_InitMID) == 0x000020, "Wrong size on WBP_GameLogo_C_InitMID");
static_assert(offsetof(WBP_GameLogo_C_InitMID, ReturnValue) == 0x000000, "Member 'WBP_GameLogo_C_InitMID::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_InitMID, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WBP_GameLogo_C_InitMID::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_InitMID, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_GameLogo_C_InitMID::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_InitMID, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_GameLogo_C_InitMID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_GameLogo.WBP_GameLogo_C.IsLogoReady
// 0x0003 (0x0003 - 0x0000)
struct WBP_GameLogo_C_IsLogoReady final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLoadingImage_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GameLogo_C_IsLogoReady) == 0x000001, "Wrong alignment on WBP_GameLogo_C_IsLogoReady");
static_assert(sizeof(WBP_GameLogo_C_IsLogoReady) == 0x000003, "Wrong size on WBP_GameLogo_C_IsLogoReady");
static_assert(offsetof(WBP_GameLogo_C_IsLogoReady, ReturnValue) == 0x000000, "Member 'WBP_GameLogo_C_IsLogoReady::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_IsLogoReady, CallFunc_IsLoadingImage_ReturnValue) == 0x000001, "Member 'WBP_GameLogo_C_IsLogoReady::CallFunc_IsLoadingImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameLogo_C_IsLogoReady, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_GameLogo_C_IsLogoReady::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}


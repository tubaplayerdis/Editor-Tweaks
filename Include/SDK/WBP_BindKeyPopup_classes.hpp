#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BindKeyPopup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "BrickRigs_structs.hpp"
#include "BrickRigs_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BindKeyPopup.WBP_BindKeyPopup_C
// 0x0020 (0x0348 - 0x0328)
class UWBP_BindKeyPopup_C final : public UBindKeyPopupWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBrickBorder*                           ConflictsBorder;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBrickTextBlock*                        ConflictsTextBlock;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBrickBorder*                           ControlHintBorder;                                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_BindKeyPopup(int32 EntryPoint);
	void UpdateIsBindingKey(bool bNewIsBinding);
	void PreConstruct(bool IsDesignTime);
	void UpdateConflictedMappings(bool bIsConflicted, const TArray<class FText>& ConflictedMappingNames);
	void Construct();

	class FText ConflictsArrayToText(class FText& InText, TArray<class FText>& InConflictNames) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BindKeyPopup_C">();
	}
	static class UWBP_BindKeyPopup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BindKeyPopup_C>();
	}
};
static_assert(alignof(UWBP_BindKeyPopup_C) == 0x000008, "Wrong alignment on UWBP_BindKeyPopup_C");
static_assert(sizeof(UWBP_BindKeyPopup_C) == 0x000348, "Wrong size on UWBP_BindKeyPopup_C");
static_assert(offsetof(UWBP_BindKeyPopup_C, UberGraphFrame) == 0x000328, "Member 'UWBP_BindKeyPopup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_BindKeyPopup_C, ConflictsBorder) == 0x000330, "Member 'UWBP_BindKeyPopup_C::ConflictsBorder' has a wrong offset!");
static_assert(offsetof(UWBP_BindKeyPopup_C, ConflictsTextBlock) == 0x000338, "Member 'UWBP_BindKeyPopup_C::ConflictsTextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_BindKeyPopup_C, ControlHintBorder) == 0x000340, "Member 'UWBP_BindKeyPopup_C::ControlHintBorder' has a wrong offset!");

}


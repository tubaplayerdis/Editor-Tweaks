#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Shredder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Shredder.BP_Shredder_C
// 0x0028 (0x0248 - 0x0220)
class ABP_Shredder_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Rotor2;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Rotor1;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shredder;                                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFunnel;                                           // 0x0244(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRamp;                                             // 0x0245(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_Shredder(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Shredder_C">();
	}
	static class ABP_Shredder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Shredder_C>();
	}
};
static_assert(alignof(ABP_Shredder_C) == 0x000008, "Wrong alignment on ABP_Shredder_C");
static_assert(sizeof(ABP_Shredder_C) == 0x000248, "Wrong size on ABP_Shredder_C");
static_assert(offsetof(ABP_Shredder_C, UberGraphFrame) == 0x000220, "Member 'ABP_Shredder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Shredder_C, Rotor2) == 0x000228, "Member 'ABP_Shredder_C::Rotor2' has a wrong offset!");
static_assert(offsetof(ABP_Shredder_C, Rotor1) == 0x000230, "Member 'ABP_Shredder_C::Rotor1' has a wrong offset!");
static_assert(offsetof(ABP_Shredder_C, Shredder) == 0x000238, "Member 'ABP_Shredder_C::Shredder' has a wrong offset!");
static_assert(offsetof(ABP_Shredder_C, Speed) == 0x000240, "Member 'ABP_Shredder_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_Shredder_C, bFunnel) == 0x000244, "Member 'ABP_Shredder_C::bFunnel' has a wrong offset!");
static_assert(offsetof(ABP_Shredder_C, bRamp) == 0x000245, "Member 'ABP_Shredder_C::bRamp' has a wrong offset!");

}


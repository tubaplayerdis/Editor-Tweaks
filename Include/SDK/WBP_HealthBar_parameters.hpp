#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HealthBar

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "BrickRigs_structs.hpp"


namespace SDK::Params
{

// Function WBP_HealthBar.WBP_HealthBar_C.ExecuteUbergraph_WBP_HealthBar
// 0x0034 (0x0034 - 0x0000)
struct WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterHealingState                        Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewHealth;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewCanBeDamaged;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBrickUIIconSlot                       K2Node_MakeStruct_BrickUIIconSlot;                 // 0x0028(0x0008)(NoDestructor)
	ECharacterHealingState                        K2Node_Event_NewState;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            K2Node_Select_Default_2;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar) == 0x000004, "Wrong alignment on WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar");
static_assert(sizeof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar) == 0x000034, "Wrong size on WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, EntryPoint) == 0x000000, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_bool_Variable) == 0x000004, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_int_Variable) == 0x000008, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_int_Variable_1) == 0x00000C, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_byte_Variable) == 0x000010, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_byte_Variable_1) == 0x000011, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_byte_Variable_2) == 0x000012, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_byte_Variable_3) == 0x000013, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_bool_Variable_1) == 0x000014, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_byte_Variable_4) == 0x000015, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_byte_Variable_5) == 0x000016, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_Event_NewHealth) == 0x000018, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_Event_NewHealth' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_Event_bNewCanBeDamaged) == 0x00001C, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_Event_bNewCanBeDamaged' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00001D, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_Select_Default) == 0x000020, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_Select_Default_1) == 0x000024, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_MakeStruct_BrickUIIconSlot) == 0x000028, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_MakeStruct_BrickUIIconSlot' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_Event_NewState) == 0x000030, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_Select_Default_2) == 0x000031, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000032, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.UpdateHealingState
// 0x0001 (0x0001 - 0x0000)
struct WBP_HealthBar_C_UpdateHealingState final
{
public:
	ECharacterHealingState                        NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_UpdateHealingState) == 0x000001, "Wrong alignment on WBP_HealthBar_C_UpdateHealingState");
static_assert(sizeof(WBP_HealthBar_C_UpdateHealingState) == 0x000001, "Wrong size on WBP_HealthBar_C_UpdateHealingState");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealingState, NewState) == 0x000000, "Member 'WBP_HealthBar_C_UpdateHealingState::NewState' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.UpdateCanBeDamaged
// 0x0001 (0x0001 - 0x0000)
struct WBP_HealthBar_C_UpdateCanBeDamaged final
{
public:
	bool                                          bNewCanBeDamaged;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HealthBar_C_UpdateCanBeDamaged) == 0x000001, "Wrong alignment on WBP_HealthBar_C_UpdateCanBeDamaged");
static_assert(sizeof(WBP_HealthBar_C_UpdateCanBeDamaged) == 0x000001, "Wrong size on WBP_HealthBar_C_UpdateCanBeDamaged");
static_assert(offsetof(WBP_HealthBar_C_UpdateCanBeDamaged, bNewCanBeDamaged) == 0x000000, "Member 'WBP_HealthBar_C_UpdateCanBeDamaged::bNewCanBeDamaged' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.UpdateHealth
// 0x0004 (0x0004 - 0x0000)
struct WBP_HealthBar_C_UpdateHealth final
{
public:
	float                                         NewHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_UpdateHealth) == 0x000004, "Wrong alignment on WBP_HealthBar_C_UpdateHealth");
static_assert(sizeof(WBP_HealthBar_C_UpdateHealth) == 0x000004, "Wrong size on WBP_HealthBar_C_UpdateHealth");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, NewHealth) == 0x000000, "Member 'WBP_HealthBar_C_UpdateHealth::NewHealth' has a wrong offset!");

}


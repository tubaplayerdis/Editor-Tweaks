#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIStyle_Default

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BrickRigs_structs.hpp"
#include "BrickRigs_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UIStyle_Default.BP_UIStyle_Default_C
// 0x0010 (0x5AE8 - 0x5AD8)
class UBP_UIStyle_Default_C : public UBrickUIStyle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x5AD8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bUseBrightBackground;                              // 0x5AE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_UIStyle_Default(int32 EntryPoint);
	void BuildStyle();
	void SetColorStyle(EBrickUIColorStyle ColorStyle, const struct FLinearColor& DefaultColor, const struct FLinearColor& ForergoundColor, const struct FLinearColor& FocusedColor, const struct FLinearColor& FocusedForegroundColor, const struct FLinearColor& SelectedColor, const struct FLinearColor& SelectedForegroundColor);
	void SetBrushStyle(EBrickUIBrushStyle BrushStyle, const struct FSlateBrush& Brush, const struct FSlateBrush& FocusedBrush, const struct FSlateBrush& PressedBrush, const struct FSlateBrush& SelectedBrush, const struct FSlateBrush& MarqueeBrush);
	void BuildDefaultStyle(const struct FLinearColor& DefaultColor, const struct FLinearColor& ForegroundColor, const struct FLinearColor& HighlightColor, const struct FLinearColor& HighlightForegroundColor, const struct FLinearColor& SelectedColor, const struct FLinearColor& SelectedForegroundColor, const struct FLinearColor& LogoColor, const struct FLinearColor& LogoForegroundColor, const struct FLinearColor& LogoForegroundContrastColor);

	struct FTextBlockStyle MakeTextStyle(class FName Typeface, float Scale, class UObject* Font_Material, int32 OutlineSize) const;
	struct FLinearColor MakeLiteralColor(const struct FLinearColor& Color) const;
	void MakeDefaultColors(struct FLinearColor* Dark, struct FLinearColor* Medium, struct FLinearColor* Bright, struct FLinearColor* Negative, struct FLinearColor* Positive, struct FLinearColor* Background, struct FLinearColor* BrightBackground, struct FLinearColor* Border, struct FLinearColor* BrickRigs, struct FLinearColor* Fluppisoft, struct FLinearColor* FluppisoftForeground) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UIStyle_Default_C">();
	}
	static class UBP_UIStyle_Default_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_UIStyle_Default_C>();
	}
};
static_assert(alignof(UBP_UIStyle_Default_C) == 0x000008, "Wrong alignment on UBP_UIStyle_Default_C");
static_assert(sizeof(UBP_UIStyle_Default_C) == 0x005AE8, "Wrong size on UBP_UIStyle_Default_C");
static_assert(offsetof(UBP_UIStyle_Default_C, UberGraphFrame) == 0x005AD8, "Member 'UBP_UIStyle_Default_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_UIStyle_Default_C, bUseBrightBackground) == 0x005AE0, "Member 'UBP_UIStyle_Default_C::bUseBrightBackground' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarElevator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BrickRigs_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CarElevator.BP_CarElevator_C
// 0x0058 (0x0300 - 0x02A8)
class ABP_CarElevator_C : public AElevator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Platform;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TopControlPanel;                                   // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BottomControlPanel;                                // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cap;                                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHierarchicalInstancedStaticMeshComponent* Rails;                                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ElevatorControlPanel;                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GearFast;                                          // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GearSlow;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base;                                              // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         NumRails;                                          // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CarElevator(int32 EntryPoint);
	void OnElevatorStateChanged(const struct FElevatorState& NewState);
	void UserConstructionScript();

	struct FVector GetInteractionLocation(int32 Index_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CarElevator_C">();
	}
	static class ABP_CarElevator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CarElevator_C>();
	}
};
static_assert(alignof(ABP_CarElevator_C) == 0x000008, "Wrong alignment on ABP_CarElevator_C");
static_assert(sizeof(ABP_CarElevator_C) == 0x000300, "Wrong size on ABP_CarElevator_C");
static_assert(offsetof(ABP_CarElevator_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_CarElevator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, Platform) == 0x0002B0, "Member 'ABP_CarElevator_C::Platform' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, TopControlPanel) == 0x0002B8, "Member 'ABP_CarElevator_C::TopControlPanel' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, BottomControlPanel) == 0x0002C0, "Member 'ABP_CarElevator_C::BottomControlPanel' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, Cap) == 0x0002C8, "Member 'ABP_CarElevator_C::Cap' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, Rails) == 0x0002D0, "Member 'ABP_CarElevator_C::Rails' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, ElevatorControlPanel) == 0x0002D8, "Member 'ABP_CarElevator_C::ElevatorControlPanel' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, GearFast) == 0x0002E0, "Member 'ABP_CarElevator_C::GearFast' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, GearSlow) == 0x0002E8, "Member 'ABP_CarElevator_C::GearSlow' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, Base) == 0x0002F0, "Member 'ABP_CarElevator_C::Base' has a wrong offset!");
static_assert(offsetof(ABP_CarElevator_C, NumRails) == 0x0002F8, "Member 'ABP_CarElevator_C::NumRails' has a wrong offset!");

}


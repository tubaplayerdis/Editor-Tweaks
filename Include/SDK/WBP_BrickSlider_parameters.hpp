#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BrickSlider

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_BrickSlider.WBP_BrickSlider_C.ExecuteUbergraph_WBP_BrickSlider
// 0x0038 (0x0038 - 0x0000)
struct WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewValue;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0008(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_1;                // 0x001C(0x0008)(NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsDragging;                          // 0x0031(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider) == 0x000008, "Wrong alignment on WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider");
static_assert(sizeof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider) == 0x000038, "Wrong size on WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, EntryPoint) == 0x000000, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, K2Node_Event_NewValue) == 0x000004, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::K2Node_Event_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, K2Node_MakeStruct_SlateChildSize) == 0x000008, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000010, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, K2Node_MakeStruct_SlateChildSize_1) == 0x00001C, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::K2Node_MakeStruct_SlateChildSize_1' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000028, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, K2Node_Event_IsDesignTime) == 0x000030, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider, K2Node_Event_bIsDragging) == 0x000031, "Member 'WBP_BrickSlider_C_ExecuteUbergraph_WBP_BrickSlider::K2Node_Event_bIsDragging' has a wrong offset!");

// Function WBP_BrickSlider.WBP_BrickSlider_C.UpdateIsDragging
// 0x0001 (0x0001 - 0x0000)
struct WBP_BrickSlider_C_UpdateIsDragging final
{
public:
	bool                                          bIsDragging;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BrickSlider_C_UpdateIsDragging) == 0x000001, "Wrong alignment on WBP_BrickSlider_C_UpdateIsDragging");
static_assert(sizeof(WBP_BrickSlider_C_UpdateIsDragging) == 0x000001, "Wrong size on WBP_BrickSlider_C_UpdateIsDragging");
static_assert(offsetof(WBP_BrickSlider_C_UpdateIsDragging, bIsDragging) == 0x000000, "Member 'WBP_BrickSlider_C_UpdateIsDragging::bIsDragging' has a wrong offset!");

// Function WBP_BrickSlider.WBP_BrickSlider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_BrickSlider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BrickSlider_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_BrickSlider_C_PreConstruct");
static_assert(sizeof(WBP_BrickSlider_C_PreConstruct) == 0x000001, "Wrong size on WBP_BrickSlider_C_PreConstruct");
static_assert(offsetof(WBP_BrickSlider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_BrickSlider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_BrickSlider.WBP_BrickSlider_C.UpdateSliderPosition
// 0x0004 (0x0004 - 0x0000)
struct WBP_BrickSlider_C_UpdateSliderPosition final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BrickSlider_C_UpdateSliderPosition) == 0x000004, "Wrong alignment on WBP_BrickSlider_C_UpdateSliderPosition");
static_assert(sizeof(WBP_BrickSlider_C_UpdateSliderPosition) == 0x000004, "Wrong size on WBP_BrickSlider_C_UpdateSliderPosition");
static_assert(offsetof(WBP_BrickSlider_C_UpdateSliderPosition, NewValue) == 0x000000, "Member 'WBP_BrickSlider_C_UpdateSliderPosition::NewValue' has a wrong offset!");

// Function WBP_BrickSlider.WBP_BrickSlider_C.CreateModifierHintWidget
// 0x0048 (0x0048 - 0x0000)
struct WBP_BrickSlider_C_CreateModifierHintWidget final
{
public:
	class UInputKeyWidget*                        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector2D                              Pivot;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InputKey_C*                        CallFunc_GetWidget_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BrickSlider_C_CreateModifierHintWidget) == 0x000008, "Wrong alignment on WBP_BrickSlider_C_CreateModifierHintWidget");
static_assert(sizeof(WBP_BrickSlider_C_CreateModifierHintWidget) == 0x000048, "Wrong size on WBP_BrickSlider_C_CreateModifierHintWidget");
static_assert(offsetof(WBP_BrickSlider_C_CreateModifierHintWidget, Widget) == 0x000000, "Member 'WBP_BrickSlider_C_CreateModifierHintWidget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_CreateModifierHintWidget, Key) == 0x000008, "Member 'WBP_BrickSlider_C_CreateModifierHintWidget::Key' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_CreateModifierHintWidget, Pivot) == 0x000020, "Member 'WBP_BrickSlider_C_CreateModifierHintWidget::Pivot' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_CreateModifierHintWidget, HorizontalAlignment) == 0x000028, "Member 'WBP_BrickSlider_C_CreateModifierHintWidget::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_CreateModifierHintWidget, VerticalAlignment) == 0x000029, "Member 'WBP_BrickSlider_C_CreateModifierHintWidget::VerticalAlignment' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_CreateModifierHintWidget, CallFunc_AddChildToOverlay_ReturnValue) == 0x000030, "Member 'WBP_BrickSlider_C_CreateModifierHintWidget::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_CreateModifierHintWidget, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_BrickSlider_C_CreateModifierHintWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_CreateModifierHintWidget, CallFunc_GetWidget_ReturnValue) == 0x000040, "Member 'WBP_BrickSlider_C_CreateModifierHintWidget::CallFunc_GetWidget_ReturnValue' has a wrong offset!");

// Function WBP_BrickSlider.WBP_BrickSlider_C.PoolModifierHintWidget
// 0x0010 (0x0010 - 0x0000)
struct WBP_BrickSlider_C_PoolModifierHintWidget final
{
public:
	class UInputKeyWidget*                        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_BrickSlider_C_PoolModifierHintWidget) == 0x000008, "Wrong alignment on WBP_BrickSlider_C_PoolModifierHintWidget");
static_assert(sizeof(WBP_BrickSlider_C_PoolModifierHintWidget) == 0x000010, "Wrong size on WBP_BrickSlider_C_PoolModifierHintWidget");
static_assert(offsetof(WBP_BrickSlider_C_PoolModifierHintWidget, Widget) == 0x000000, "Member 'WBP_BrickSlider_C_PoolModifierHintWidget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_BrickSlider_C_PoolModifierHintWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_BrickSlider_C_PoolModifierHintWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


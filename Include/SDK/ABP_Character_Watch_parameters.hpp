#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Character_Watch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Character_Watch.ABP_Character_Watch_C.ExecuteUbergraph_ABP_Character_Watch
// 0x0078 (0x0078 - 0x0000)
struct ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch) == 0x000008, "Wrong alignment on ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch");
static_assert(sizeof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch) == 0x000078, "Wrong size on ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, EntryPoint) == 0x000000, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, K2Node_Event_DeltaTimeX) == 0x000014, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00001C, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_RInterpTo_ReturnValue) == 0x000020, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000038, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_GetTimeSeconds_ReturnValue) == 0x00003C, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_Sin_ReturnValue) == 0x000050, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000054, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000058, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_MakeRotator_ReturnValue_1) == 0x00005C, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch, CallFunc_ComposeRotators_ReturnValue) == 0x000068, "Member 'ABP_Character_Watch_C_ExecuteUbergraph_ABP_Character_Watch::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function ABP_Character_Watch.ABP_Character_Watch_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Character_Watch_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Character_Watch_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Character_Watch_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Character_Watch_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Character_Watch_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Character_Watch_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Character_Watch_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Character_Watch.ABP_Character_Watch_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Character_Watch_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Character_Watch_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Character_Watch_C_AnimGraph");
static_assert(sizeof(ABP_Character_Watch_C_AnimGraph) == 0x000010, "Wrong size on ABP_Character_Watch_C_AnimGraph");
static_assert(offsetof(ABP_Character_Watch_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Character_Watch_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}


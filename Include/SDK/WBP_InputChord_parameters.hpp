#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputChord

#include "Basic.hpp"

#include "BrickRigs_structs.hpp"


namespace SDK::Params
{

// Function WBP_InputChord.WBP_InputChord_C.ExecuteUbergraph_WBP_InputChord
// 0x0048 (0x0048 - 0x0000)
struct WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputKeyWidget*                        K2Node_Event_Widget_2;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_Event_Widget_1;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_Event_Widget;                               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            K2Node_Event_NewColorStyle;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIStyleState                            K2Node_Event_NewStyleState;                        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InputKeySpacer_C*                  K2Node_DynamicCast_AsWBP_Input_Key_Spacer;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord) == 0x000008, "Wrong alignment on WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord");
static_assert(sizeof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord) == 0x000048, "Wrong size on WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, EntryPoint) == 0x000000, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, K2Node_Event_Widget_2) == 0x000008, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::K2Node_Event_Widget_2' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, K2Node_Event_Widget_1) == 0x000010, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::K2Node_Event_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000018, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, K2Node_Event_Widget) == 0x000020, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, K2Node_Event_NewColorStyle) == 0x000028, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::K2Node_Event_NewColorStyle' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, K2Node_Event_NewStyleState) == 0x000029, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::K2Node_Event_NewStyleState' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, K2Node_DynamicCast_AsWBP_Input_Key_Spacer) == 0x000030, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::K2Node_DynamicCast_AsWBP_Input_Key_Spacer' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x000040, "Member 'WBP_InputChord_C_ExecuteUbergraph_WBP_InputChord::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");

// Function WBP_InputChord.WBP_InputChord_C.UpdateSpacerColorStyleAndStyleState
// 0x0010 (0x0010 - 0x0000)
struct WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            NewColorStyle;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIStyleState                            NewStyleState;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState) == 0x000008, "Wrong alignment on WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState");
static_assert(sizeof(WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState) == 0x000010, "Wrong size on WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState");
static_assert(offsetof(WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState, Widget) == 0x000000, "Member 'WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState::Widget' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState, NewColorStyle) == 0x000008, "Member 'WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState::NewColorStyle' has a wrong offset!");
static_assert(offsetof(WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState, NewStyleState) == 0x000009, "Member 'WBP_InputChord_C_UpdateSpacerColorStyleAndStyleState::NewStyleState' has a wrong offset!");

// Function WBP_InputChord.WBP_InputChord_C.AddSpacerWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_InputChord_C_AddSpacerWidget final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputChord_C_AddSpacerWidget) == 0x000008, "Wrong alignment on WBP_InputChord_C_AddSpacerWidget");
static_assert(sizeof(WBP_InputChord_C_AddSpacerWidget) == 0x000008, "Wrong size on WBP_InputChord_C_AddSpacerWidget");
static_assert(offsetof(WBP_InputChord_C_AddSpacerWidget, Widget) == 0x000000, "Member 'WBP_InputChord_C_AddSpacerWidget::Widget' has a wrong offset!");

// Function WBP_InputChord.WBP_InputChord_C.AddKeyWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_InputChord_C_AddKeyWidget final
{
public:
	class UInputKeyWidget*                        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputChord_C_AddKeyWidget) == 0x000008, "Wrong alignment on WBP_InputChord_C_AddKeyWidget");
static_assert(sizeof(WBP_InputChord_C_AddKeyWidget) == 0x000008, "Wrong size on WBP_InputChord_C_AddKeyWidget");
static_assert(offsetof(WBP_InputChord_C_AddKeyWidget, Widget) == 0x000000, "Member 'WBP_InputChord_C_AddKeyWidget::Widget' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Character_RC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Character_RC.ABP_Character_RC_C.ExecuteUbergraph_ABP_Character_RC
// 0x0070 (0x0070 - 0x0000)
struct ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RC_Sequence_C*                      K2Node_DynamicCast_AsBP_RC_Sequence;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVehicleDestroyed_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLookAtTarget_ReturnValue;              // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC) == 0x000008, "Wrong alignment on ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC");
static_assert(sizeof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC) == 0x000070, "Wrong size on ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, EntryPoint) == 0x000000, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_GetOwningActor_ReturnValue) == 0x000010, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_GetOwningComponent_ReturnValue) == 0x000018, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, K2Node_DynamicCast_AsBP_RC_Sequence) == 0x000020, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::K2Node_DynamicCast_AsBP_RC_Sequence' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_IsVehicleDestroyed_ReturnValue) == 0x000038, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_IsVehicleDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_GetLookAtTarget_ReturnValue) == 0x00003C, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_GetLookAtTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_MakeRotFromX_ReturnValue) == 0x000054, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC, CallFunc_RInterpTo_ReturnValue) == 0x000060, "Member 'ABP_Character_RC_C_ExecuteUbergraph_ABP_Character_RC::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");

// Function ABP_Character_RC.ABP_Character_RC_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Character_RC_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Character_RC_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Character_RC_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Character_RC_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Character_RC_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Character_RC_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Character_RC_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Character_RC.ABP_Character_RC_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Character_RC_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Character_RC_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Character_RC_C_AnimGraph");
static_assert(sizeof(ABP_Character_RC_C_AnimGraph) == 0x000010, "Wrong size on ABP_Character_RC_C_AnimGraph");
static_assert(offsetof(ABP_Character_RC_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Character_RC_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}


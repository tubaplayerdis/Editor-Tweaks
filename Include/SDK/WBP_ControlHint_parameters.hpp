#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ControlHint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ControlHint.WBP_ControlHint_C.ExecuteUbergraph_WBP_ControlHint
// 0x000C (0x000C - 0x0000)
struct WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewVisible;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint) == 0x000004, "Wrong alignment on WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint");
static_assert(sizeof(WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint) == 0x00000C, "Wrong size on WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint");
static_assert(offsetof(WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint, EntryPoint) == 0x000000, "Member 'WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint, Temp_bool_Variable) == 0x000004, "Member 'WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint, Temp_byte_Variable) == 0x000005, "Member 'WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint, K2Node_Event_bNewVisible) == 0x000007, "Member 'WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint::K2Node_Event_bNewVisible' has a wrong offset!");
static_assert(offsetof(WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint, K2Node_Select_Default) == 0x000008, "Member 'WBP_ControlHint_C_ExecuteUbergraph_WBP_ControlHint::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ControlHint.WBP_ControlHint_C.UpdateInputChordVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_ControlHint_C_UpdateInputChordVisibility final
{
public:
	bool                                          bNewVisible;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_ControlHint_C_UpdateInputChordVisibility) == 0x000001, "Wrong alignment on WBP_ControlHint_C_UpdateInputChordVisibility");
static_assert(sizeof(WBP_ControlHint_C_UpdateInputChordVisibility) == 0x000001, "Wrong size on WBP_ControlHint_C_UpdateInputChordVisibility");
static_assert(offsetof(WBP_ControlHint_C_UpdateInputChordVisibility, bNewVisible) == 0x000000, "Member 'WBP_ControlHint_C_UpdateInputChordVisibility::bNewVisible' has a wrong offset!");

// Function WBP_ControlHint.WBP_ControlHint_C.SetIconSize
// 0x000C (0x000C - 0x0000)
struct WBP_ControlHint_C_SetIconSize final
{
public:
	float                                         NewSize;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ControlHint_C_SetIconSize) == 0x000004, "Wrong alignment on WBP_ControlHint_C_SetIconSize");
static_assert(sizeof(WBP_ControlHint_C_SetIconSize) == 0x00000C, "Wrong size on WBP_ControlHint_C_SetIconSize");
static_assert(offsetof(WBP_ControlHint_C_SetIconSize, NewSize) == 0x000000, "Member 'WBP_ControlHint_C_SetIconSize::NewSize' has a wrong offset!");
static_assert(offsetof(WBP_ControlHint_C_SetIconSize, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'WBP_ControlHint_C_SetIconSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}


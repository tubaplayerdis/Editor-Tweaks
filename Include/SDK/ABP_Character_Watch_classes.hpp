#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Character_Watch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BrickRigs_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Character_Watch.ABP_Character_Watch_C
// 0x0180 (0x0440 - 0x02C0)
class UABP_Character_Watch_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_ViewRotation                 AnimGraphNode_ViewRotation;                        // 0x0300(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0390(0x0080)()
	struct FRotator                               ViewRotation;                                      // 0x0410(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetRotation;                                    // 0x041C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               CurrentRotation;                                   // 0x0428(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Character_Watch(int32 EntryPoint);
	void UpdateTargetRotation();
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Character_Watch_C">();
	}
	static class UABP_Character_Watch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Character_Watch_C>();
	}
};
static_assert(alignof(UABP_Character_Watch_C) == 0x000010, "Wrong alignment on UABP_Character_Watch_C");
static_assert(sizeof(UABP_Character_Watch_C) == 0x000440, "Wrong size on UABP_Character_Watch_C");
static_assert(offsetof(UABP_Character_Watch_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_Character_Watch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Character_Watch_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UABP_Character_Watch_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Character_Watch_C, AnimGraphNode_ViewRotation) == 0x000300, "Member 'UABP_Character_Watch_C::AnimGraphNode_ViewRotation' has a wrong offset!");
static_assert(offsetof(UABP_Character_Watch_C, AnimGraphNode_SequencePlayer) == 0x000390, "Member 'UABP_Character_Watch_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Character_Watch_C, ViewRotation) == 0x000410, "Member 'UABP_Character_Watch_C::ViewRotation' has a wrong offset!");
static_assert(offsetof(UABP_Character_Watch_C, TargetRotation) == 0x00041C, "Member 'UABP_Character_Watch_C::TargetRotation' has a wrong offset!");
static_assert(offsetof(UABP_Character_Watch_C, CurrentRotation) == 0x000428, "Member 'UABP_Character_Watch_C::CurrentRotation' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PagedListHeader

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BrickRigs_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.ExecuteUbergraph_WBP_PagedListHeader
// 0x0A30 (0x0A30 - 0x0000)
struct WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable_4;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_5;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable_6;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable_7;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_8;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable_9;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_10;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            Temp_byte_Variable_11;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            Temp_byte_Variable_12;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InTitleText;                          // 0x0040(0x0018)(ConstParm)
	bool                                          K2Node_Event_bInHasEntry;                          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasUnsavedChanges;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InNumObjects;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InMaxNumObjects;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InNumHiddenObjects;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InNumObjectsWithAerodynamics;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NumberToText_ReturnValue;                 // 0x0078(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_NumberToText_ReturnValue_1;               // 0x00D8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0100(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01A8(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0208(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default;                             // 0x0218(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0230(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0250(0x0018)()
	class FText                                   CallFunc_NumberToText_ReturnValue_2;               // 0x0268(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0280(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02C0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            K2Node_Select_Default_2;                           // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            K2Node_Select_Default_3;                           // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NumberToText_ReturnValue_3;               // 0x0310(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0330(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0370(0x0010)(ReferenceParm)
	EBrickUIColorStyle                            K2Node_Select_Default_4;                           // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0388(0x0018)()
	EBrickUIColorStyle                            K2Node_Select_Default_5;                           // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_6;                           // 0x03A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x03C0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0400(0x0040)(HasGetValueTypeHash)
	struct FVector                                K2Node_Event_InDimensions;                         // 0x0440(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_InMaxDimensions;                      // 0x044C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0458(0x0010)(ReferenceParm)
	float                                         CallFunc_BreakVector_X;                            // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0478(0x0018)()
	class FText                                   CallFunc_NumberToText_ReturnValue_4;               // 0x0490(0x0018)()
	class FText                                   K2Node_Select_Default_7;                           // 0x04A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x04C0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_NumberToText_ReturnValue_5;               // 0x0500(0x0018)()
	class FText                                   CallFunc_NumberToText_ReturnValue_6;               // 0x0518(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0530(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0570(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x05B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x05D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x05E8(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NumberToText_ReturnValue_7;               // 0x0648(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x0668(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_NumberToText_ReturnValue_8;               // 0x06A8(0x0018)()
	class FText                                   CallFunc_NumberToText_ReturnValue_9;               // 0x06C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x06D8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x0718(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_764[0x4];                                      // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0768(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779[0x7];                                      // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0780(0x0018)()
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_16;           // 0x07A0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x07E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x0800(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_8;                           // 0x0820(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_839[0x3];                                      // 0x0839(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InPrice;                              // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InMoney;                              // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0844(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            K2Node_Select_Default_9;                           // 0x0845(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_846[0x2];                                      // 0x0846(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NumberToText_ReturnValue_10;              // 0x0848(0x0018)()
	EBrickUIColorStyle                            K2Node_Select_Default_10;                          // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_17;           // 0x0868(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x08A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrickUIColorStyle                            K2Node_Select_Default_11;                          // 0x08AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AB[0x5];                                      // 0x08AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NumberToText_ReturnValue_11;              // 0x08B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_18;           // 0x08C8(0x0040)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_909[0x7];                                      // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_8;                          // 0x0910(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_8;                     // 0x0920(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0938(0x0018)()
	class FText                                   K2Node_Select_Default_12;                          // 0x0950(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_19;           // 0x0968(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_9;                          // 0x09A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_9;                     // 0x09B8(0x0018)()
	class FText                                   K2Node_Select_Default_13;                          // 0x09D0(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x09E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x09EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9EB[0x1];                                      // 0x09EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InMass;                               // 0x09EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InMaxMass;                            // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x09F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x09F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x09F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x09F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_NumberToText_ReturnValue_12;              // 0x09F8(0x0018)()
	EBrickUIColorStyle                            K2Node_Select_Default_14;                          // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A13[0x1];                                      // 0x0A13(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_15;                          // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_16;                          // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0A1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1D[0x3];                                      // 0x0A1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0A20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIColorStyle                            K2Node_ComponentBoundEvent_InColorStyle;           // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIStyleState                            K2Node_ComponentBoundEvent_InContentStyleState;    // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInIsEnabled;                   // 0x0A2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader) == 0x000008, "Wrong alignment on WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader");
static_assert(sizeof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader) == 0x000A30, "Wrong size on WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, EntryPoint) == 0x000000, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable) == 0x000004, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable) == 0x000005, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_1) == 0x000007, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_2) == 0x000009, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_3) == 0x00000A, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_3) == 0x00000B, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_4) == 0x00000C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_5) == 0x00000D, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_4) == 0x00000E, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_5) == 0x00000F, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_6) == 0x000010, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_7) == 0x000011, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_int_Variable) == 0x000014, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_int_Variable_1) == 0x000018, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_8) == 0x00001C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_int_Variable_2) == 0x000020, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_int_Variable_3) == 0x000024, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_9) == 0x000028, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_6) == 0x000029, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_10) == 0x00002A, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_11) == 0x00002B, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_12) == 0x00002C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_7) == 0x00002D, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_8) == 0x00002E, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_13) == 0x00002F, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_9) == 0x000030, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_10) == 0x000031, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_14) == 0x000032, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_15) == 0x000033, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_11) == 0x000034, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_byte_Variable_12) == 0x000035, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Has_Been_Initd_Variable) == 0x000036, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_MakeLiteralInt_ReturnValue) == 0x000038, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x00003C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InTitleText) == 0x000040, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InTitleText' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_bInHasEntry) == 0x000058, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_bInHasEntry' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_bInHasUnsavedChanges) == 0x000059, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_bInHasUnsavedChanges' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InNumObjects) == 0x00005C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InNumObjects' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InMaxNumObjects) == 0x000060, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InMaxNumObjects' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InNumHiddenObjects) == 0x000064, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InNumHiddenObjects' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InNumObjectsWithAerodynamics) == 0x000068, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InNumObjectsWithAerodynamics' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00006C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue) == 0x000078, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000090, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_1) == 0x0000D8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_1) == 0x000100, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue) == 0x000140, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_1) == 0x000158, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_1) == 0x0001A8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001C0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001C8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_2) == 0x000208, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default) == 0x000218, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_2) == 0x000230, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanOR_ReturnValue) == 0x000248, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanAND_ReturnValue) == 0x000249, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00024C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_1) == 0x000250, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_2) == 0x000268, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_4) == 0x000280, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002C0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000300, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000301, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_2) == 0x000302, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_3) == 0x000303, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000304, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000308, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Not_PreBool_ReturnValue) == 0x00030C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_3) == 0x000310, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanOR_ReturnValue_1) == 0x000328, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_6) == 0x000330, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_3) == 0x000370, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_4) == 0x000380, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_3) == 0x000388, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_5) == 0x0003A0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_6) == 0x0003A8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_7) == 0x0003C0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_8) == 0x000400, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InDimensions) == 0x000440, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InDimensions' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InMaxDimensions) == 0x00044C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InMaxDimensions' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_4) == 0x000458, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_X) == 0x000468, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_Y) == 0x00046C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_Z) == 0x000470, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_4) == 0x000478, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_4) == 0x000490, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_7) == 0x0004A8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_9) == 0x0004C0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_5) == 0x000500, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_6) == 0x000518, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_10) == 0x000530, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_11) == 0x000570, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_GetMaxElement_ReturnValue) == 0x0005B0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_5) == 0x0005B8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0005C8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_5) == 0x0005D0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_12) == 0x0005E8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_X_1) == 0x000628, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_Y_1) == 0x00062C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_Z_1) == 0x000630, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_X_2) == 0x000634, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_Y_2) == 0x000638, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_Z_2) == 0x00063C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Vector_IsZero_ReturnValue) == 0x000640, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_7) == 0x000648, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Not_PreBool_ReturnValue_1) == 0x000660, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_13) == 0x000668, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_8) == 0x0006A8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_9) == 0x0006C0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_14) == 0x0006D8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_15) == 0x000718, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_X_3) == 0x000758, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_Y_3) == 0x00075C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BreakVector_Z_3) == 0x000760, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_6) == 0x000768, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000778, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_6) == 0x000780, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000798, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_16) == 0x0007A0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x0007E0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_7) == 0x0007E8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanAND_ReturnValue_1) == 0x0007F8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_7) == 0x000800, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanAND_ReturnValue_2) == 0x000818, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_8) == 0x000820, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanOR_ReturnValue_2) == 0x000838, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InPrice) == 0x00083C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InPrice' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InMoney) == 0x000840, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InMoney' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000844, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_9) == 0x000845, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_10) == 0x000848, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_10) == 0x000860, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_17) == 0x000868, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0008A8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0008A9, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_11) == 0x0008AA, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_11) == 0x0008B0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_18) == 0x0008C8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_18' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_Variable_16) == 0x000908, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_8) == 0x000910, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_8) == 0x000920, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_MakeLiteralText_ReturnValue) == 0x000938, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_12) == 0x000950, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeStruct_FormatArgumentData_19) == 0x000968, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeStruct_FormatArgumentData_19' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_MakeArray_Array_9) == 0x0009A8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Format_ReturnValue_9) == 0x0009B8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Format_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_13) == 0x0009D0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanOR_ReturnValue_3) == 0x0009E8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanOR_ReturnValue_4) == 0x0009E9, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanOR_ReturnValue_5) == 0x0009EA, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InMass) == 0x0009EC, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InMass' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_InMaxMass) == 0x0009F0, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_InMaxMass' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x0009F4, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x0009F5, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0009F6, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanOR_ReturnValue_6) == 0x0009F7, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_NumberToText_ReturnValue_12) == 0x0009F8, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_NumberToText_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_14) == 0x000A10, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Event_IsDesignTime) == 0x000A11, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_BooleanOR_ReturnValue_7) == 0x000A12, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_15) == 0x000A14, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_Select_Default_16) == 0x000A18, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, Temp_bool_IsClosed_Variable) == 0x000A1C, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000A20, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_ComponentBoundEvent_InColorStyle) == 0x000A28, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_ComponentBoundEvent_InColorStyle' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_ComponentBoundEvent_InContentStyleState) == 0x000A29, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_ComponentBoundEvent_InContentStyleState' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader, K2Node_CustomEvent_bInIsEnabled) == 0x000A2A, "Member 'WBP_PagedListHeader_C_ExecuteUbergraph_WBP_PagedListHeader::K2Node_CustomEvent_bInIsEnabled' has a wrong offset!");

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.UpdateClearButton
// 0x0001 (0x0001 - 0x0000)
struct WBP_PagedListHeader_C_UpdateClearButton final
{
public:
	bool                                          bInIsEnabled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PagedListHeader_C_UpdateClearButton) == 0x000001, "Wrong alignment on WBP_PagedListHeader_C_UpdateClearButton");
static_assert(sizeof(WBP_PagedListHeader_C_UpdateClearButton) == 0x000001, "Wrong size on WBP_PagedListHeader_C_UpdateClearButton");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateClearButton, bInIsEnabled) == 0x000000, "Member 'WBP_PagedListHeader_C_UpdateClearButton::bInIsEnabled' has a wrong offset!");

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature final
{
public:
	EBrickUIColorStyle                            InColorStyle;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrickUIStyleState                            InContentStyleState;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature) == 0x000001, "Wrong alignment on WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature");
static_assert(sizeof(WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature) == 0x000002, "Wrong size on WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature");
static_assert(offsetof(WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature, InColorStyle) == 0x000000, "Member 'WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature::InColorStyle' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature, InContentStyleState) == 0x000001, "Member 'WBP_PagedListHeader_C_BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature::InContentStyleState' has a wrong offset!");

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PagedListHeader_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PagedListHeader_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PagedListHeader_C_PreConstruct");
static_assert(sizeof(WBP_PagedListHeader_C_PreConstruct) == 0x000001, "Wrong size on WBP_PagedListHeader_C_PreConstruct");
static_assert(offsetof(WBP_PagedListHeader_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PagedListHeader_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.UpdateMass
// 0x0008 (0x0008 - 0x0000)
struct WBP_PagedListHeader_C_UpdateMass final
{
public:
	float                                         InMass;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InMaxMass;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PagedListHeader_C_UpdateMass) == 0x000004, "Wrong alignment on WBP_PagedListHeader_C_UpdateMass");
static_assert(sizeof(WBP_PagedListHeader_C_UpdateMass) == 0x000008, "Wrong size on WBP_PagedListHeader_C_UpdateMass");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateMass, InMass) == 0x000000, "Member 'WBP_PagedListHeader_C_UpdateMass::InMass' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateMass, InMaxMass) == 0x000004, "Member 'WBP_PagedListHeader_C_UpdateMass::InMaxMass' has a wrong offset!");

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.UpdatePrice
// 0x0008 (0x0008 - 0x0000)
struct WBP_PagedListHeader_C_UpdatePrice final
{
public:
	float                                         InPrice;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InMoney;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PagedListHeader_C_UpdatePrice) == 0x000004, "Wrong alignment on WBP_PagedListHeader_C_UpdatePrice");
static_assert(sizeof(WBP_PagedListHeader_C_UpdatePrice) == 0x000008, "Wrong size on WBP_PagedListHeader_C_UpdatePrice");
static_assert(offsetof(WBP_PagedListHeader_C_UpdatePrice, InPrice) == 0x000000, "Member 'WBP_PagedListHeader_C_UpdatePrice::InPrice' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_UpdatePrice, InMoney) == 0x000004, "Member 'WBP_PagedListHeader_C_UpdatePrice::InMoney' has a wrong offset!");

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.UpdateDimensions
// 0x0018 (0x0018 - 0x0000)
struct WBP_PagedListHeader_C_UpdateDimensions final
{
public:
	struct FVector                                InDimensions;                                      // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InMaxDimensions;                                   // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PagedListHeader_C_UpdateDimensions) == 0x000004, "Wrong alignment on WBP_PagedListHeader_C_UpdateDimensions");
static_assert(sizeof(WBP_PagedListHeader_C_UpdateDimensions) == 0x000018, "Wrong size on WBP_PagedListHeader_C_UpdateDimensions");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateDimensions, InDimensions) == 0x000000, "Member 'WBP_PagedListHeader_C_UpdateDimensions::InDimensions' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateDimensions, InMaxDimensions) == 0x00000C, "Member 'WBP_PagedListHeader_C_UpdateDimensions::InMaxDimensions' has a wrong offset!");

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.UpdateNumObjects
// 0x0010 (0x0010 - 0x0000)
struct WBP_PagedListHeader_C_UpdateNumObjects final
{
public:
	int32                                         InNumObjects;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMaxNumObjects;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InNumHiddenObjects;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InNumObjectsWithAerodynamics;                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PagedListHeader_C_UpdateNumObjects) == 0x000004, "Wrong alignment on WBP_PagedListHeader_C_UpdateNumObjects");
static_assert(sizeof(WBP_PagedListHeader_C_UpdateNumObjects) == 0x000010, "Wrong size on WBP_PagedListHeader_C_UpdateNumObjects");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateNumObjects, InNumObjects) == 0x000000, "Member 'WBP_PagedListHeader_C_UpdateNumObjects::InNumObjects' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateNumObjects, InMaxNumObjects) == 0x000004, "Member 'WBP_PagedListHeader_C_UpdateNumObjects::InMaxNumObjects' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateNumObjects, InNumHiddenObjects) == 0x000008, "Member 'WBP_PagedListHeader_C_UpdateNumObjects::InNumHiddenObjects' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateNumObjects, InNumObjectsWithAerodynamics) == 0x00000C, "Member 'WBP_PagedListHeader_C_UpdateNumObjects::InNumObjectsWithAerodynamics' has a wrong offset!");

// Function WBP_PagedListHeader.WBP_PagedListHeader_C.UpdateEntry
// 0x0020 (0x0020 - 0x0000)
struct WBP_PagedListHeader_C_UpdateEntry final
{
public:
	class FText                                   InTitleText;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bInHasEntry;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInHasUnsavedChanges;                              // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PagedListHeader_C_UpdateEntry) == 0x000008, "Wrong alignment on WBP_PagedListHeader_C_UpdateEntry");
static_assert(sizeof(WBP_PagedListHeader_C_UpdateEntry) == 0x000020, "Wrong size on WBP_PagedListHeader_C_UpdateEntry");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateEntry, InTitleText) == 0x000000, "Member 'WBP_PagedListHeader_C_UpdateEntry::InTitleText' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateEntry, bInHasEntry) == 0x000018, "Member 'WBP_PagedListHeader_C_UpdateEntry::bInHasEntry' has a wrong offset!");
static_assert(offsetof(WBP_PagedListHeader_C_UpdateEntry, bInHasUnsavedChanges) == 0x000019, "Member 'WBP_PagedListHeader_C_UpdateEntry::bInHasUnsavedChanges' has a wrong offset!");

}


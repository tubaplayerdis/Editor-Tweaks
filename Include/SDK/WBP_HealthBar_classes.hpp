#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HealthBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "BrickRigs_structs.hpp"
#include "BrickRigs_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HealthBar.WBP_HealthBar_C
// 0x0020 (0x0298 - 0x0278)
class UWBP_HealthBar_C final : public UHealthBarWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HealthBarBox;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBrickImage*                            HealthImage;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BrickSliderReadOnly_C*             HealthSlider;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_HealthBar(int32 EntryPoint);
	void UpdateHealingState(ECharacterHealingState NewState);
	void UpdateCanBeDamaged(bool bNewCanBeDamaged);
	void UpdateHealth(float NewHealth);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HealthBar_C">();
	}
	static class UWBP_HealthBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HealthBar_C>();
	}
};
static_assert(alignof(UWBP_HealthBar_C) == 0x000008, "Wrong alignment on UWBP_HealthBar_C");
static_assert(sizeof(UWBP_HealthBar_C) == 0x000298, "Wrong size on UWBP_HealthBar_C");
static_assert(offsetof(UWBP_HealthBar_C, UberGraphFrame) == 0x000278, "Member 'UWBP_HealthBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HealthBar_C, HealthBarBox) == 0x000280, "Member 'UWBP_HealthBar_C::HealthBarBox' has a wrong offset!");
static_assert(offsetof(UWBP_HealthBar_C, HealthImage) == 0x000288, "Member 'UWBP_HealthBar_C::HealthImage' has a wrong offset!");
static_assert(offsetof(UWBP_HealthBar_C, HealthSlider) == 0x000290, "Member 'UWBP_HealthBar_C::HealthSlider' has a wrong offset!");

}


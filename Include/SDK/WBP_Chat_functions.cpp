#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Chat

#include "Basic.hpp"

#include "WBP_Chat_classes.hpp"
#include "WBP_Chat_parameters.hpp"


namespace SDK
{

// Function WBP_Chat.WBP_Chat_C.ExecuteUbergraph_WBP_Chat
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Chat_C::ExecuteUbergraph_WBP_Chat(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Chat_C", "ExecuteUbergraph_WBP_Chat");

	Params::WBP_Chat_C_ExecuteUbergraph_WBP_Chat Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Chat.WBP_Chat_C.UpdateIsTyping
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewTyping                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Chat_C::UpdateIsTyping(bool bNewTyping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Chat_C", "UpdateIsTyping");

	Params::WBP_Chat_C_UpdateIsTyping Parms{};

	Parms.bNewTyping = bNewTyping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Chat.WBP_Chat_C.UpdateIsFocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewFocused                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Chat_C::UpdateIsFocused(bool bNewFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Chat_C", "UpdateIsFocused");

	Params::WBP_Chat_C_UpdateIsFocused Parms{};

	Parms.bNewFocused = bNewFocused;

	UObject::ProcessEvent(Func, &Parms);
}

}


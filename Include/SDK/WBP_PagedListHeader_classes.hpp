#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PagedListHeader

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BrickRigs_structs.hpp"
#include "BrickRigs_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PagedListHeader.WBP_PagedListHeader_C
// 0x0060 (0x0320 - 0x02C0)
class UWBP_PagedListHeader_C final : public UPagedListHeaderWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_BrickButton_C*                     ClearButton;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBrickImage*                            ClearImage;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PagedListHeaderField_C*            DimensionsWidget;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PagedListHeaderField_C*            MassWidget;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PagedListHeaderField_C*            NameWidget;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PagedListHeaderField_C*            ObjectsWidget;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PagedListHeaderField_C*            PriceWidget;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBrickHorizontalBox*                    PropsBox;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsInEditor;                                       // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnClickedClear;                                    // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_PagedListHeader(int32 EntryPoint);
	void BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void UpdateClearButton(bool bInIsEnabled);
	void BndEvt__WBP_PagedListHeader_ClearButton_K2Node_ComponentBoundEvent_0_OnUpdateContentStyle__DelegateSignature(EBrickUIColorStyle InColorStyle, EBrickUIStyleState InContentStyleState);
	void PreConstruct(bool IsDesignTime);
	void UpdateMass(float InMass, float InMaxMass);
	void UpdatePrice(float InPrice, float InMoney);
	void UpdateDimensions(const struct FVector& InDimensions, const struct FVector& InMaxDimensions);
	void UpdateNumObjects(int32 InNumObjects, int32 InMaxNumObjects, int32 InNumHiddenObjects, int32 InNumObjectsWithAerodynamics);
	void UpdateEntry(const class FText& InTitleText, bool bInHasEntry, bool bInHasUnsavedChanges);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PagedListHeader_C">();
	}
	static class UWBP_PagedListHeader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PagedListHeader_C>();
	}
};
static_assert(alignof(UWBP_PagedListHeader_C) == 0x000008, "Wrong alignment on UWBP_PagedListHeader_C");
static_assert(sizeof(UWBP_PagedListHeader_C) == 0x000320, "Wrong size on UWBP_PagedListHeader_C");
static_assert(offsetof(UWBP_PagedListHeader_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_PagedListHeader_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, ClearButton) == 0x0002C8, "Member 'UWBP_PagedListHeader_C::ClearButton' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, ClearImage) == 0x0002D0, "Member 'UWBP_PagedListHeader_C::ClearImage' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, DimensionsWidget) == 0x0002D8, "Member 'UWBP_PagedListHeader_C::DimensionsWidget' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, MassWidget) == 0x0002E0, "Member 'UWBP_PagedListHeader_C::MassWidget' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, NameWidget) == 0x0002E8, "Member 'UWBP_PagedListHeader_C::NameWidget' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, ObjectsWidget) == 0x0002F0, "Member 'UWBP_PagedListHeader_C::ObjectsWidget' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, PriceWidget) == 0x0002F8, "Member 'UWBP_PagedListHeader_C::PriceWidget' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, PropsBox) == 0x000300, "Member 'UWBP_PagedListHeader_C::PropsBox' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, bIsInEditor) == 0x000308, "Member 'UWBP_PagedListHeader_C::bIsInEditor' has a wrong offset!");
static_assert(offsetof(UWBP_PagedListHeader_C, OnClickedClear) == 0x000310, "Member 'UWBP_PagedListHeader_C::OnClickedClear' has a wrong offset!");

}

